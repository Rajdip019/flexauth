openapi: 3.1.0
info:
  title: FlexAuth
  description: >-
    # ðŸš€ Get started here


    This template guides you through CRUD operations (GET, POST, PUT, DELETE),
    variables, and tests.


    ## ðŸ”– **How to use this template**


    #### **Step 1: Send requests**


    RESTful APIs allow you to perform CRUD operations using the POST, GET, PUT,
    and DELETE HTTP methods.


    This collection contains each of these
    [request](https://learning.postman.com/docs/sending-requests/requests/)
    types. Open each request and click "Send" to see what happens.


    #### **Step 2: View responses**


    Observe the response tab for status code (200 OK), response time, and size.


    #### **Step 3: Send new Body data**


    Update or add new data in "Body" in the POST request. Typically, Body data
    is also used in PUT request.


    ```

    {
        "name": "Add your name in the body"
    }

     ```

    #### **Step 4: Update the variable**


    Variables enable you to store and reuse values in Postman. We have created a
    [variable](https://learning.postman.com/docs/sending-requests/variables/)
    called `base_url` with the sample request
    [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me).
    Replace it with your API endpoint to customize this collection.


    #### **Step 5: Add tests in the "Tests" tab**


    Tests help you confirm that your API is working as expected. You can write
    test scripts in JavaScript and view the output in the "Test Results" tab.


    <img
    src="https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n">


    ## ðŸ’ª Pro tips


    - Use folders to group related requests and organize the collection.

    - Add more
    [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)
    in "Tests" to verify if the API works as expected and execute workflows.
        

    ## ðŸ’¡Related templates


    [API testing
    basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  

    [API
    documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  

    [Authorization
    methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)
  version: 1.0.0
servers:
  - url: http://{{base_url}}
tags:
  - name: user
  - name: auth
  - name: health-check
  - name: session
  - name: password
paths:
  /user/get-all:
    get:
      tags:
        - user
      summary: get-all
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /user/get-from-email:
    post:
      tags:
        - user
      summary: get-from-email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: debajyotisaha14@gmail.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /user/get-from-id:
    post:
      tags:
        - user
      summary: get-from-id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                uid: 4554efa4-71da-4a1d-85bb-1c5691db87be
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /user/update:
    post:
      tags:
        - user
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Debajyoti Saha
                email: debajyotisaha14@gmail.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /user/toggle-account-active-status:
    post:
      tags:
        - user
      summary: toggle-account-active-status
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                is_active: true
                email: debajyotisaha14@gmail.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /user/update-role:
    post:
      tags:
        - user
      summary: update-role
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                role: admin
                email: debajyotisaha14@gmail.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /user/delete:
    post:
      tags:
        - user
      summary: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: debajyotisaha14@gmail.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/signup:
    post:
      tags:
        - auth
      summary: signup
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: debajyotisaha14@gmail.com
                name: Debajyoti Saha
                password: Debu@1234
                role: admin
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/signin:
    post:
      tags:
        - auth
      summary: signin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: debajyotisaha14@gmail.com
                password: Debu4321
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /auth/signout:
    post:
      tags:
        - auth
      summary: signout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                session_id: >-
                  1e6129b169517494cffff74ac735a03a52967604c31cca8b9c8c43c24d780cf6cc2804550f845c1221fd8a787ce88884a57fb7c8
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /health:
    get:
      tags:
        - health-check
      summary: health
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /session/verify:
    post:
      tags:
        - session
      summary: verify
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                token: >-
                  eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1aWQiOiIyNjk3NzY3Ni1jYjM3LTRmM2ItYTgyMS03ZTU5YzU0NTlmZDIiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAiLCJpYXQiOjE3MTU2MjU5MjMsImV4cCI6MTcxNTYyOTUyMywidG9rZW5fdHlwZSI6ImlkIiwiZGF0YSI6eyJpc19lbWFpbF92ZXJpZmllZCI6ImZhbHNlIiwiaXNfYWN0aXZlIjoidHJ1ZSIsImRpc3BsYXlfbmFtZSI6IkRlYmFqeW90aSBTYWhhIiwicm9sZSI6ImFkbWluIn19.qmE4MijE52rNldxc6PRw3rvpXbpBnNi-l7UhiuYqi1GT2bD1_KnqGrdQFJdVRTQ0fQjOFJwUu-77HbaQUCODHlE0NHn9aHECjCI4in1X--5atiyVIt_73wqgQgwMjkxmzDMtwIwClFQcQwKQizGOgrqKftsy_IhrerMgy7aE3wrZv0on5fdxOfxVZ8OW1ueATuEVR1QWn8vjM3ojpylrXJCVWhoJje0z7diudHHorNaon8e-7JUQr-TYzrlA-OH5QoaLDboobRg1-VU8RzaPWNbysUGZgUvLIPwJojoVa_fRk0I8qzmKBSFzcPKZQHMNXtB0ySaCv5flI-0EZ2yHnA
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /session/get_all_from_uid:
    post:
      tags:
        - session
      summary: get_all_from_uid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                uid: 26977676-cb37-4f3b-a821-7e59c5459fd2
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /session/refresh-session:
    post:
      tags:
        - session
      summary: refresh-session
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                session_id: >-
                  41607eb13b522fc3cfaafe1b9035a03c51c47604c019c38bcc891ac2132f0ef4ca26010772c0dcef478394e996c8e22bf8c08360
                id_token: >-
                  eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1aWQiOiIyNjk3NzY3Ni1jYjM3LTRmM2ItYTgyMS03ZTU5YzU0NTlmZDIiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAiLCJpYXQiOjE3MTU2MjYxMjQsImV4cCI6MTcxNTYyOTcyNCwidG9rZW5fdHlwZSI6ImlkIiwiZGF0YSI6eyJyb2xlIjoiYWRtaW4iLCJkaXNwbGF5X25hbWUiOiJEZWJhanlvdGkgU2FoYSIsImlzX2FjdGl2ZSI6InRydWUiLCJpc19lbWFpbF92ZXJpZmllZCI6ImZhbHNlIn19.Otar_P0p5Fq7iQpss2Uf0awXiaF_GItIAGIGmxMJYitXJbR1KBj2xb9zsNBuW62OKjKJq_Sir1kNb9MAsd8ccnOmIpT9Kv5j7f-3nusRNiBjlWfrdqbunhPKEAH8Qdxjf6bm15dA78QIXRfUYyn9j24Rm_HCaMWwCZ39cNDIjL7QE9Kxbtru6bpmHoHVF_ac0VbhoUZ26XkoyQ__K86ypcr27y4lrEq8hj-kW6t7epwFlOS_ktlYHrCIREVAOh3s2KCb2PoNG_ObHLhS60-J0WDEv4iJ-Lv5aUka1zcLgShc64xlkj0qDD9wPrtqOgHjV4qjMvUk7sPpEc6AbKCu5g
                refresh_token: >-
                  eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1aWQiOiIyNjk3NzY3Ni1jYjM3LTRmM2ItYTgyMS03ZTU5YzU0NTlmZDIiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAiLCJpYXQiOjE3MTU2MjYxMjQsImV4cCI6MTcxOTUxNDEyNCwic2NvcGUiOiJnZXRfbmV3X2lkX3Rva2VuIiwiZGF0YSI6bnVsbH0.OGCc90lt5baMPIb2LP-IeZmOpBezXfkvwwNSeinuRuLLT9mwdfFw6QPv5n7P9n_9FZAeVRl8azHIZgr1zAHk_9Agr5EsVmalDQBqw5x59M5oTRy0tGGhvUVMESJ3TvFn4p6M1aU9i740mNgjkDCsZ695gaxZqv5RlLZgilk5qBElQXd_vba9BBbVpfvW0rweXwJ-T-aF_8Xd2Gpr3FXOd18x68u4CefDNQtWBJZgAL-a_FpVFhcRo-MJIelhzQNgBhnp2h98PQfaa7e8sVoyUTLXE-5zb0KRE4YqalvFUPR8U7vpyJXUMuKz6orjfn9eHYA4L8YUrtsIU6SIx2Rj4A
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /session/revoke:
    post:
      tags:
        - session
      summary: revoke
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                session_id: >-
                  41607eb13b522fc3cfaafe1b9035a03c51c47604c019c38bcc891ac2132f0ef4ca26010772c0dcef478394e996c8e22bf8c08360
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /session/revoke-all:
    post:
      tags:
        - session
      summary: revoke-all
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                uid: 26977676-cb37-4f3b-a821-7e59c5459fd2
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /session/delete:
    post:
      tags:
        - session
      summary: delete
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                session_id: >-
                  41607eb13b522fc3cfaafe1b9035a03c51c47604c019c38bcc891ac2132f0ef4ca26010772c0dcef478394e996c8e22bf8c08360
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /session/delete-all:
    post:
      tags:
        - session
      summary: delete-all
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                uid: 26977676-cb37-4f3b-a821-7e59c5459fd2
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /password/reset:
    post:
      tags:
        - password
      summary: reset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: debajyotisaha14@gmail.com
                old_password: Debu@1234
                new_password: Debu4321
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /password/forget-request:
    post:
      tags:
        - password
      summary: forget-request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: debajyotisaha14@gmail.com
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
  /password/forget-reset/414a5486-5254-4016-908b-72cde4acf063:
    post:
      tags:
        - password
      summary: forget-reset
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                email: debajyotisaha14@gmail.com
                password: Debu4321
      responses:
        "200":
          description: Successful response
          content:
            application/json: {}
